server.port=0
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/product_orderservice?allowPublicKeyRetrieval=true&useSSL=false
spring.datasource.username=zeeshan
spring.datasource.password=infa@123
spring.jpa.hibernate.ddl-auto=update
eureka.client.service-url.default-zone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=false
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
spring.application.name=order-service


management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

##Resilience4j Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true 

##Resilience4j timeout
resilience4j.timelimiter.instances.inventory.timeout-duration=3s


resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s


spring.zipkin.base-url=http://127.0.0.1:9411
spring.sleuth.sampler.probability=1.0

##Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.example.orderservice.event.OrderPlacedEvent